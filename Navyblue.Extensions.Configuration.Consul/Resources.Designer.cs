//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Navyblue.Extension.Configuration.Consul {
    using System;


    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.Extensions.Configuration.Json.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string Error_InvalidFilePath
        {
            get => GetString("Error_InvalidFilePath");
        }

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string FormatError_InvalidFilePath()
            => GetString("Error_InvalidFilePath");

        /// <summary>
        /// Could not parse the JSON file. Error on line number '{0}': '{1}'.
        /// </summary>
        internal static string Error_JSONParseError
        {
            get => GetString("Error_JSONParseError");
        }

        /// <summary>
        /// A duplicate key '{0}' was found.
        /// </summary>
        internal static string Error_KeyIsDuplicated
        {
            get => GetString("Error_KeyIsDuplicated");
        }

        /// <summary>
        /// A duplicate key '{0}' was found.
        /// </summary>
        internal static string FormatError_KeyIsDuplicated(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("Error_KeyIsDuplicated"), p0);

        /// <summary>
        /// Service key ‘{0}’ must be available.
        /// </summary>
        internal static string Error_InvalidService(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("Error_InvalidService"), p0);

        /// <summary>
        /// Service key ‘{0}’ has none value.
        /// </summary>
        internal static string Error_ValueNotExist(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("Error_ValueNotExist"), p0);

        /// <summary>
        /// Service key ‘{0}’ response a bad code.
        /// </summary>
        internal static string Error_Request(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("Error_Request"), p0);

        /// <summary>
        /// Unsupported JSON token '{0}' was found.
        /// </summary>
        internal static string Error_UnsupportedJSONToken
        {
            get => GetString("Error_UnsupportedJSONToken");
        }

        /// <summary>
        /// Unsupported JSON token '{0}' was found.
        /// </summary>
        internal static string FormatError_UnsupportedJSONToken(object p0)
            => string.Format(CultureInfo.CurrentCulture, GetString("Error_UnsupportedJSONToken"), p0);

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
